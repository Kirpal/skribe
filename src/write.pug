doctype html
html
    head
        link(rel="stylesheet", href="/static/write.css", type="text/css")
    body
        include header.pug
        div#title
            h1= title
            input.code(type="button")
        section#story
            each paragraph in story
                p(data-color=paragraph.author.color)= paragraph.text
            p#current(contenteditable="true")
        div#bottom-bar
            div#viewers
                img#viewer-icon(src="https://rawgit.com/Kirpal/skribe/master/src/images/ic_group_black_24dp_2x.png")
                div#viewer-number 325
            div#emojis
                div.vote(data-emoji="heart")
                    img.emojiIcons(src="https://twemoji.maxcdn.com/2/72x72/1f602.png")
                    div.emoji-num= votes["heart"]

                div.vote(data-emoji="laugh")
                    img.emojiIcons(src="https://twemoji.maxcdn.com/2/72x72/1f60d.png")
                    div.emoji-num= votes["laugh"]

                div.vote(data-emoji="thumbs-up")
                    img.emojiIcons(src="https://twemoji.maxcdn.com/2/72x72/1f635.png")
                    div.emoji-num= votes["thumbs-up"]

                div.vote(data-emoji="thumbs-down")
                    img.emojiIcons(src="https://twemoji.maxcdn.com/2/72x72/1f62d.png")
                    div.emoji-num= votes["thumbs-down"]

                div.vote(data-emoji="love")
                    img.emojiIcons(src="https://twemoji.maxcdn.com/2/72x72/1f62d.png")
                    div.emoji-num= votes["love"]

        script(src="/socket.io/socket.io.js")
        script(src="https://code.jquery.com/jquery-3.3.1.min.js")
        script(src="https://cdn.jsdelivr.net/npm/clipboard@2/dist/clipboard.min.js")
        script.
            const socket = io();
            const room = "#{room}";

            socket.on('connect', () => {
                socket.emit('room', room);
                $('.code').val(room);
                new ClipboardJS('.code')
            })

            $('.vote').click((e) => {
                socket.emit('vote', $(e.target).parent('.vote').data('emoji'));
            })

            $('#story').children('p:not(#current)').each((idx, element) => {
                console.log(element)
                $(element).css('border-left-color', $(element).data('color'))
            })

            $('#current').on('keydown', (e) => {
                if(['.', '.', '?', '!', '\'', '"'].indexOf(e.target.textContent.substr(-1)) !== -1) {
                    socket.emit("word", e.target.textContent.split(" "));
                } else {
                    socket.emit("input", e.target.textContent);
                }
            });

            $('#current').keydown((e) => {
                if(e.keyCode === 32) {
                    socket.emit("word", e.target.textContent.split(" "));
                }else if(e.keyCode === 8 && e.target.textContent.slice(-1) === " " || e.target.textContent.length === 0) {
                    socket.emit("word", e.target.textContent.slice(0, -1).split(" "))
                }
            });

            socket.on("updateViewers", (viewers) => {
                $('#viewer-num').html(viewers)
            });
            socket.on("vote", (vote) => {
                $('.vote[data-emoji=' + vote.vote + ']').children('.emoji-num').html(vote.count)
            });